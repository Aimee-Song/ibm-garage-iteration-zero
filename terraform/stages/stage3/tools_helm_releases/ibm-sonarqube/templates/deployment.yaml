apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ibm-sonarqube.fullname" . }}
  labels:
    app: {{ template "ibm-sonarqube.name" . }}
    chart: {{ template "ibm-sonarqube.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ibm-sonarqube.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ibm-sonarqube.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      volumes:
        - name: sonarqube
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "ibm-sonarqube.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end  }}
      initContainers:
        - name: pv-mount-permissions
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - mkdir -p /mount/data; mkdir -p /mount/tmp; chown -R 999:999 /mount;
          volumeMounts:
            - mountPath: /mount
              name: sonarqube
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.sonarWebContext }}sessions/new
              port: {{ .Values.service.containerPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.sonarWebContext }}sessions/new
              port: {{ .Values.service.containerPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          env:
            - name: sonar.jdbc.url
              valueFrom:
                secretKeyRef:
                  name: {{ template "ibm-sonarqube.fullname" . }}-jdbc
                  key: jdbcUrl
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/extensions/plugins/tmp
              name: sonarqube
              subPath: tmp
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
